---
import { getLangFromUrl } from '@i18n/utils'
import { ViewTransitions } from 'astro:transitions'
import Navbar from '@modules/navbar/navbar.astro'
import MobileMenu from '@modules/mobileMenu/mobileMenu.astro'
import Contact from '@modules/contact/contact.astro'
import Footer from '@modules/footer/footer.astro'
import Favicon from '@assets/favicon.ico'
import '@styles/variables.scss'
import './main.scss'
import type { AstroSlotAttributes } from 'node_modules/astro/dist/@types/astro'

export interface Props {
  pageTitle: string
  projectSlug?: string
  translatedSlug?: string
  description?: string
}

const lang = getLangFromUrl(Astro.url)
const { pageTitle, translatedSlug, projectSlug, description }: Props =
  Astro.props
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{pageTitle}</title>
    <link rel="icon" href={Favicon} />
    {description && <meta name="”description”" content={description} />}
    <ViewTransitions />
    <meta
      name="google-site-verification"
      content="YHyMW4oTuJU2Ses4znH7xRe_yvk6_bRTRoHcb5pglr4"
    />
  </head>

  <body>
    <h1 class="pageTitle">{pageTitle}</h1>
    <script is:inline>
      function loadThemes() {
        const colorMode = localStorage.getItem('colorMode')

        const getSystemColorMode = () => {
          const systemDarkTheme = window.matchMedia(
            '(prefers-color-scheme: dark)'
          )
          if (systemDarkTheme.matches) return 'dark'
          return 'light'
        }

        if (colorMode === 'dark' || colorMode === 'light') {
          document.body.setAttribute('data-colorMode', colorMode)
        } else {
          const systemColorMode = getSystemColorMode()
          localStorage.setItem('colorMode', systemColorMode)
          document.body.setAttribute('data-colorMode', systemColorMode)
        }
      }
      loadThemes()

      document.addEventListener('astro:after-swap', loadThemes)
    </script>
    <Navbar
      translatedProjectSlug={translatedSlug}
      projectSlug={projectSlug}
      transition:persist
    />
    <MobileMenu
      translatedProjectSlug={translatedSlug}
      projectSlug={projectSlug}
      transition:persist
    />
    <main>
      <slot />
      <Contact />
      <Footer />
    </main>
  </body>
</html>
